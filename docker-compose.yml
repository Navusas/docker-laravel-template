version: "3.7"

services:
  app:
    build:
      args:
        user: mytrack
        uid: 1000
      context: .
      dockerfile: .docker/php.dockerfile
    container_name: app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./src:/var/www
    networks:
      - myTrack

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./src:/var/www
      - ./.docker/nginx:/etc/nginx/conf.d/
    depends_on:
      - app
      - mysql
    networks:
      - myTrack

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "33006:3306"
    environment:
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      SERVICE_TAGS: "${SERVICE_TAGS}"
      SERVICE_NAME: "${SERVICE_NAME}"
    volumes:
      - ./.docker/mysql:/docker-entrypoint-initdb.d
      - dbdata:/var/lib/mysql/
    networks:
      - myTrack

  npm:
    image: node:latest
    container_name: npm
    restart: on-failure
    working_dir: /var/www
    volumes:
      - ./src:/var/www
    command: "npm install"
    depends_on:
      - app
    networks:
      - myTrack

volumes:
  dbdata:
    driver: local

networks:
  myTrack:
    driver: bridge
